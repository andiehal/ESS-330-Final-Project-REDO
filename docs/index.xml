<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving
and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
  <front>
    <article-meta>
      <title-group>
        <article-title>Final Project - Wood Thrush Response</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author" corresp="yes">
          <name>
            <surname>Myers</surname>
            <given-names>Leona</given-names>
          </name>
          <string-name>Leona Myers</string-name>
          <role vocab="https://credit.niso.org" vocab-term="writing – original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing</role>
          <role>Coding</role>
          <role>Refining</role>
          <xref ref-type="aff" rid="aff-1">a</xref>
          <xref ref-type="corresp" rid="cor-1">*</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Hall</surname>
            <given-names>Andie</given-names>
          </name>
          <string-name>Andie Hall</string-name>
          <role vocab="https://credit.niso.org" vocab-term="writing – original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing</role>
          <role>Coding</role>
          <role>Refining</role>
          <xref ref-type="aff" rid="aff-1">a</xref>
        </contrib>
      </contrib-group>
      <aff id="aff-1">
        <institution-wrap>
          <institution>Colorado State University</institution>
        </institution-wrap>
      </aff>
      <author-notes>
        <corresp id="cor-1"/>
      </author-notes>
      <history/>
    </article-meta>
  </front>
  <body>
    <sec id="climate-change-and-avian-response-assessing-the-effects-of-coU2082-and-temperature-on-wood-thrush-populations">
      <title>Climate Change and Avian Response: Assessing the Effects of CO₂
  and Temperature on Wood Thrush Populations</title>
      <sec id="abstract--">
        <title>Abstract -</title>
        <p>As climate change continues to drive research goals, different
    areas of impact arise surrounding not only humans but environmental
    and wildlife harm. Carbon dioxide is one of the main contributors to
    climate change, directly impacting annual temperatures and
    disturbing typical weather patterns. Wildlife, specifically avian
    species, are queue dependent on temperatures for specific
    phenological stages like migration (Lang et al.
    (<xref alt="2024" rid="ref-neelang2024" ref-type="bibr">2024</xref>)).
    In recent decades, there has been an observed decline to several
    avian populations, leading both avian and climate scientists to
    answer if climate change has disturbed the migration periods, which
    can directly impact the effectiveness of their breeding cycles. By
    analyzing annual temperatures and carbon emissions, this study aims
    to identify a correlation between changing variables and observed
    migration dates.</p>
      </sec>
      <sec id="part-1.-introduction--">
        <title>Part 1. Introduction -</title>
        <p><bold>Problem Overview</bold>: In recent decades, global climate
    change, driven by increased carbon dioxide emissions, has
    contributed to rising temperatures and disrupted ecological systems
    (NOAA National Centers for Environmental Information
    (<xref alt="2024" rid="ref-noaa2024climate" ref-type="bibr">2024</xref>)).
    Many migratory bird species, such as the subject of this study, the
    Wood Thrush (Hylocichla mustelina), are particularly vulnerable to
    these changes due to their reliance on specific environmental cues
    for migration, breeding, and survival. The Wood Thrush is included
    on the Yellow Watch List for birds most at risk of extinction, and
    it is one of the most prominent examples of declining forest
    songbirds in North America (Ornithology
    (<xref alt="2024" rid="ref-cornell2024woodthrush" ref-type="bibr">2024</xref>)).
    Populations have declined by 1.3% per year, resulting in a
    cumulative decline of approximately 50% between 1966 and 2019
    (Ornithology
    (<xref alt="2024" rid="ref-cornell2024woodthrush" ref-type="bibr">2024</xref>)).
    Declines in Wood Thrush populations have been observed across North
    America, yet the extent to which atmospheric CO2 levels and
    associated temperature changes contribute to these declines remains
    unclear.</p>
        <code language="r script">knitr::include_graphics("~/Github/ESS-330-Final-Project-REDO/images/Wood_Thrush_Photo.jpg")</code>
        <fig id="fig-wood-thrush">
          <caption>
            <p>Figure 1: Wood Thrush - Lance Leonhardt (Audubon
      Vermont)</p>
          </caption>
          <graphic mimetype="image" mime-subtype="jpeg" xlink:href="images/Wood_Thrush_Photo.jpg"/>
        </fig>
      </sec>
      <sec id="part-2.-materials-and-methods--">
        <title>Part 2. Materials and Methods -</title>
        <sec id="i.-research-goal-and-data-sources">
          <title>I. Research Goal and Data Sources</title>
          <p><bold>This research will investigate the effects of atmospheric
      CO₂ concentrations and temperature changes on the population
      dynamics of the Wood Thrush (Hylocichla mustelina)</bold>, a
      migratory songbird of conservation concern. The study integrates
      climate and ecological data from multiple large-scale sources:
      temperature records from the National Weather Service, (NOAA
      National Centers for Environmental Information
      (<xref alt="2024" rid="ref-noaa2024climate" ref-type="bibr">2024</xref>))
      bird abundance and distribution data from Cornell’s eBird Dataset
      (Ornithology
      (<xref alt="2024" rid="ref-cornell2024woodthrush" ref-type="bibr">2024</xref>)),
      and atmospheric CO₂ data from the Global Carbon Budget
      (Friedlingstein et al.
      (<xref alt="2023" rid="ref-friedlingstein2023global" ref-type="bibr">2023</xref>)).
      Using these data sources, we can create a model to help determine
      the effect of these variables on the arrival and departure dates
      of these species along the mid-northeastern coast of the United
      States from 1966 to 2019.</p>
        </sec>
        <sec id="ii.-methods-overview">
          <title>II. Methods Overview</title>
          <list list-type="order">
            <list-item>
              <p>
                <bold>Data acquisition</bold>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p>Climate Data: National Weather Service</p>
                </list-item>
                <list-item>
                  <p>CO₂ Data: Global Carbon Budget</p>
                </list-item>
                <list-item>
                  <p>Bird Observation Data: Cornell Lab’s eBird dataset</p>
                </list-item>
              </list>
            </list-item>
            <list-item>
              <p>
                <bold>Data Cleaning and Processing</bold>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p><bold>Climate Data -</bold> Imported 7 different
              datasets from the states above that recorded annual
              temperatures for each month between 1966 and 2019 and
              combined into one large dataset,
              “All_Weather_Data.csv”</p>
                  <list list-type="bullet">
                    <list-item>
                      <p><bold>Difficulties</bold>: The data was extremely
                  time-consuming to clean and process into a large
                  dataset due to the website’s pdf format for data
                  exports. Using Excel’s data from the file helped to
                  import the data and allowed for processing and
                  cleaning of the data before being inserted into the
                  rProject data directory.</p>
                    </list-item>
                  </list>
                </list-item>
                <list-item>
                  <p><bold>CO2 Data -</bold> Downloaded from the Global
              Carbon Budget and then uploaded to Rstudio. No additional
              cleaning was needed.</p>
                  <list list-type="bullet">
                    <list-item>
                      <p><bold>Difficulties</bold>: This data set only
                  includes annual emission while other data sets include
                  monthly data, but was the most accessible to our
                  report.</p>
                    </list-item>
                  </list>
                </list-item>
                <list-item>
                  <p><bold>Wood Thrush Data -</bold> Filtered Wood Thrush
              eBird data to between the years of 1966 and 2019, along
              with filtering the location of the bird to these specific
              states: Pennsylvania, West Virginia, Virginia, Kentucky,
              Ohio, Indiana, and Tennessee. “Wood_Thrush_Raw.csv”</p>
                  <list list-type="bullet">
                    <list-item>
                      <p><bold>Difficulties</bold>: The dataset is about
                  131.5 MB and cannot be uploaded to the git repository,
                  meaning data sharing had to be done via email rather
                  than sharing the actual repo for us to pull and
                  push. </p>
                    </list-item>
                  </list>
                </list-item>
              </list>
            </list-item>
            <list-item>
              <p>
                <bold>Statistical Analysis</bold>
              </p>
              <p>
                <bold>Preliminary Analysis - Linear Regression
          Model</bold>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p>To get a basic understand of the correlation
              relationship between temperature, CO2, and dates of
              observation, we created a linear model to visualize and
              create statistical information.</p>
                </list-item>
              </list>
              <p>
                <bold>Main Analysis - Machine Learning Prediction
          Models</bold>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p>Using the multiple datasets to account for temperature,
              CO2, and observations, we created multiple machine
              learning models: Linear Regression, Random Forest, and
              XGBoost. To identify the model of best fit, we created a
              workflow that would allow us to collect the metrics and
              determine the model we should choose based on the
              R-squared and RMSE values.</p>
                </list-item>
                <list-item>
                  <p>Using two separate recipes to account for both the
              integration of temperature on observation dates, along
              with CO2 emissions, to ensure that they would not
              interfere with each other, and give us much more data to
              analyze. After prepping and baking the data, we created
              workflows to run the models. In total, we tested about 6
              models, three for each recipe, and deciphered that Random
              Forest gives us the best predictions for both predictor
              variables.</p>
                </list-item>
                <list-item>
                  <p>Once models were defined with both models and fitted to
              the resamples of the CV fold, we ran the models to
              determine their statistical significance and to see if the
              outcome of the model would give us data that would either
              prove or disprove our hypothesis. We then, with these
              models we create visualizations to represent and
              understand the data much better.</p>
                </list-item>
              </list>
            </list-item>
            <list-item>
              <p>
                <bold>Visualization</bold>
              </p>
              <list list-type="bullet">
                <list-item>
                  <p>Creating plots for the relationship between observation
              date and CO2, along with a separate relationship between
              observation date and temperature. In total, there will be
              four main graphs to understand their impact on both Spring
              Arrival dates and Fall Departure dates.</p>
                </list-item>
              </list>
            </list-item>
          </list>
        </sec>
      </sec>
      <sec id="part-3.-preliminary-analysis---exploring-the-data">
        <title>Part 3. Preliminary Analysis - Exploring the Data</title>
        <code language="r script"># Library Codes used
library(tidyverse)</code>
        <preformat>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.2     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</preformat>
        <code language="r script">library(tidymodels)</code>
        <preformat>── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──
✔ broom        1.0.8     ✔ rsample      1.3.0
✔ dials        1.4.0     ✔ tune         1.3.0
✔ infer        1.0.8     ✔ workflows    1.2.0
✔ modeldata    1.4.0     ✔ workflowsets 1.1.0
✔ parsnip      1.3.1     ✔ yardstick    1.3.2
✔ recipes      1.3.0     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()</preformat>
        <code language="r script">library(here)</code>
        <preformat>here() starts at /Users/andiehall/Github/ESS-330-Final-Project-REDO</preformat>
        <code language="r script">library(readr)
library(lubridate)
library(zoo)</code>
        <preformat>
Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric</preformat>
        <sec id="i.-reading-in-data-bases">
          <title>I. Reading in Data Bases</title>
          <code language="r script"># CO2 Emissions
Annua_CO2_Emissions &lt;- read_csv("data/annual-co2-emissions-per-country.csv")</code>
          <preformat>Rows: 54 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Entity
dbl (2): Year, Annual CO₂ emissions
lgl (1): Code

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
          <code language="r script"># Temperature Data
AllWeatherData &lt;- read_csv("data/AllWeatherData.csv")</code>
          <preformat>Rows: 378 Columns: 15
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): STATE
dbl (14): Year, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec, ...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
          <code language="r script"># Wood Thrush Data
Wood_Thrush &lt;- read_csv("data/Wood_Thrush.csv")</code>
          <preformat>New names:
Rows: 301512 Columns: 27
── Column specification
──────────────────────────────────────────────────────── Delimiter: "," chr
(6): COUNTRY, COUNTRY CODE, STATE, COUNTY, OBSERVATION COUNT, OBSERVATI... dbl
(2): LATITUDE, LONGITUDE lgl (19): ...6, ...10, ...11, ...12, ...13, ...14,
...15, ...16, ...17, ...1...
ℹ Use `spec()` to retrieve the full column specification for this data. ℹ
Specify the column types or set `show_col_types = FALSE` to quiet this message.
• `` -&gt; `...6`
• `` -&gt; `...10`
• `` -&gt; `...11`
• `` -&gt; `...12`
• `` -&gt; `...13`
• `` -&gt; `...14`
• `` -&gt; `...15`
• `` -&gt; `...16`
• `` -&gt; `...17`
• `` -&gt; `...18`
• `` -&gt; `...19`
• `` -&gt; `...20`
• `` -&gt; `...21`
• `` -&gt; `...22`
• `` -&gt; `...23`
• `` -&gt; `...24`
• `` -&gt; `...25`
• `` -&gt; `...26`
• `` -&gt; `...27`</preformat>
        </sec>
        <sec id="ii.-preppingcleaning-data-sets">
          <title>II. Prepping/Cleaning Data Sets</title>
          <code language="r script"># Formatting Wood Thrush
Wood_Thrush &lt;- Wood_Thrush |&gt;
  select(COUNTRY, `COUNTRY CODE`, STATE, `OBSERVATION COUNT`, `OBSERVATION DATE`, LATITUDE, LONGITUDE) |&gt;
  mutate(`OBSERVATION DATE` = as.Date(`OBSERVATION DATE`, format = "%m/%d/%Y"),
         Year = year(`OBSERVATION DATE`))

# Formatting Weather
Annual_Weather &lt;- AllWeatherData |&gt;
  select(Year, Annual, STATE)

# Formatting CO2
Annua_CO2_Emissions &lt;- Annua_CO2_Emissions |&gt;
  select(Year, `Annual CO₂ emissions`)

# Joined Data
Main_Data &lt;- Wood_Thrush |&gt;
  inner_join(Annual_Weather, by = c("Year", "STATE")) |&gt;
  inner_join(Annua_CO2_Emissions, by = "Year") |&gt;
  mutate(DayOfYear = yday(`OBSERVATION DATE`)) |&gt;
  drop_na(Annual, `Annual CO₂ emissions`, DayOfYear)

# Creating Springtime Dataset
Spring_Arrival &lt;- Main_Data |&gt;
  group_by(year(`OBSERVATION DATE`)) |&gt;
  slice_min(`OBSERVATION DATE`, with_ties = FALSE)

# Creating Falltime Dataset
Fall_Departure &lt;- Main_Data |&gt;
  group_by(year(`OBSERVATION DATE`)) |&gt;
  slice_max(`OBSERVATION DATE`, with_ties = FALSE)</code>
        </sec>
        <sec id="iii.-creating-linear-model-for-observation-dates">
          <title>III. Creating Linear Model for Observation Dates</title>
          <sec id="temperature-models--">
            <title>Temperature Models -</title>
            <code language="r script"># Temperature Model - Spring
Temp_S_Main_Model &lt;- lm(formula = DayOfYear ~ Annual, data = Spring_Arrival)

summary(Temp_S_Main_Model)</code>
            <preformat>
Call:
lm(formula = DayOfYear ~ Annual, data = Spring_Arrival)

Residuals:
    Min      1Q  Median      3Q     Max 
-86.777  -1.755   5.228   9.191  21.902 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)  35.7705    36.6956   0.975    0.334
Annual        0.9964     0.6456   1.543    0.129

Residual standard error: 20.59 on 52 degrees of freedom
Multiple R-squared:  0.0438,    Adjusted R-squared:  0.02541 
F-statistic: 2.382 on 1 and 52 DF,  p-value: 0.1288</preformat>
            <code language="r script">springp1 &lt;- ggplot(Spring_Arrival, aes(x = Annual, y = DayOfYear)) +
  geom_point(color = "#87CEFA", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "#9BCD9B", se = TRUE) +  
  labs(
    title = "Effect of Annual Temperature on\nSpring Arrival Date",
    x = "Annual Average Temperature (°C)",  
    y = "Day of Year of Spring Arrival"
  ) +
  theme_minimal()

# Temperature Model - Spring
Temp_F_Main_Model &lt;- lm(formula = DayOfYear ~ Annual, data = Fall_Departure)

summary(Temp_F_Main_Model)</code>
            <preformat>
Call:
lm(formula = DayOfYear ~ Annual, data = Fall_Departure)

Residuals:
    Min      1Q  Median      3Q     Max 
-34.127 -18.496  -7.249   9.039  57.588 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 392.1490    47.0361   8.337 3.75e-11 ***
Annual       -1.5966     0.8621  -1.852   0.0697 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 24.59 on 52 degrees of freedom
Multiple R-squared:  0.06188,   Adjusted R-squared:  0.04384 
F-statistic:  3.43 on 1 and 52 DF,  p-value: 0.06971</preformat>
            <code language="r script">fallp1 &lt;- ggplot(Fall_Departure, aes(x = Annual, y = DayOfYear)) +
  geom_point(color = "palevioletred1", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "#FF7256", se = TRUE) +  
  labs(
    title = "Effect of Annual Temperature on\nFall Departure Date",
    x = "Annual Average Temperature (°C)",  
    y = "Day of Year of Fall Depature (Last Observation)"
  ) +
  theme_minimal()

# Combine plots side by side

library(patchwork)

combined_plot &lt;- springp1 + fallp1

print(combined_plot)</code>
            <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
            <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-4-1.png"/>
          </sec>
          <sec id="co2-models--">
            <title>CO2 Models -</title>
            <code language="r script">library(patchwork)
# CO2 Model - Spring
CO2_S_Main_Model &lt;- lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Spring_Arrival)

summary(CO2_S_Main_Model)</code>
            <preformat>
Call:
lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Spring_Arrival)

Residuals:
    Min      1Q  Median      3Q     Max 
-90.777   1.588   4.938   9.630  13.831 

Coefficients:
                         Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)             1.023e+02  2.019e+01   5.066 5.46e-06 ***
`Annual CO₂ emissions` -1.660e-09  3.302e-09  -0.503    0.617    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 21.01 on 52 degrees of freedom
Multiple R-squared:  0.004839,  Adjusted R-squared:  -0.0143 
F-statistic: 0.2529 on 1 and 52 DF,  p-value: 0.6172</preformat>
            <code language="r script">springp2 &lt;- ggplot(Spring_Arrival, aes(x = `Annual CO₂ emissions`, y = DayOfYear)) +
  geom_point(color = "#FFBBFF", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "palevioletred2", se = TRUE) +  
  labs(
    title = "Effect of Annual CO2 Emissions on\npring Arrival Date",
    x = "Annual CO2 Emissions (ppm)", 
    y = "Day of Year of Spring Arrival"
  ) +
  theme_minimal()

# CO2 Model - Fall
CO2_F_Main_Model &lt;- lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Fall_Departure)

summary(CO2_F_Main_Model)</code>
            <preformat>
Call:
lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Fall_Departure)

Residuals:
   Min     1Q Median     3Q    Max 
-27.19 -17.02 -12.16  10.40  63.22 

Coefficients:
                        Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)            2.912e+02  2.432e+01  11.974   &lt;2e-16 ***
`Annual CO₂ emissions` 2.323e-09  3.977e-09   0.584    0.562    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 25.3 on 52 degrees of freedom
Multiple R-squared:  0.006521,  Adjusted R-squared:  -0.01258 
F-statistic: 0.3413 on 1 and 52 DF,  p-value: 0.5616</preformat>
            <code language="r script">fallp2 &lt;- ggplot(Fall_Departure, aes(x = `Annual CO₂ emissions`, y = DayOfYear)) +
  geom_point(color = "tomato2", alpha = 0.6) +  # Scatter points
  geom_smooth(method = "lm", color = "#EE7942", se = TRUE) +  # Regression line with confidence interval
  labs(
    title = "Effect of Annual CO2 Emissions on\nFall Departure Date",
    x = "Annual CO2 Emissions (ppm)",  # Adjust units if needed
    y = "Day of Year of Fall Departure"
  ) +
  theme_minimal()

combined_plot2 &lt;- springp2 + fallp2

print(combined_plot2)</code>
            <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
            <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-5-1.png"/>
          </sec>
        </sec>
      </sec>
      <sec id="part-4.-main-analysis---machine-learning-model">
        <title>Part 4. Main Analysis - Machine Learning Model</title>
        <sec id="i.-splitting-and-cv-folds">
          <title>I. Splitting and CV folds</title>
          <code language="r script">set.seed(123)
WT_split &lt;- initial_split(Main_Data, prop = 0.8)
WT_train &lt;- training(WT_split)
WT_test  &lt;- testing(WT_split)
WT_cv &lt;- vfold_cv(WT_train, v = 5)</code>
        </sec>
        <sec id="ii.-recipes">
          <title>II. Recipes</title>
          <code language="r script"># CO2 Recipe 
CO2_rec &lt;- recipe(formula = DayOfYear ~ `Annual CO₂ emissions`, data = WT_train) |&gt;
  step_log(all_predictors()) |&gt;
  step_naomit(all_predictors(), all_outcomes())

# Temperature Recipe
Temp_rec &lt;- recipe(formula = DayOfYear ~ Annual, data = WT_train) |&gt;
  step_log(all_predictors(), offset = 1) |&gt;
  step_naomit(all_predictors(), all_outcomes())</code>
        </sec>
        <sec id="iii.-define-models">
          <title>III. Define Models</title>
          <code language="r script">lm_model &lt;- linear_reg() |&gt; set_engine("lm") |&gt; set_mode("regression")
rf_model &lt;- rand_forest(trees = 100) |&gt; set_engine("ranger") |&gt; set_mode("regression")
xg_model &lt;- boost_tree() |&gt; set_engine("xgboost") |&gt; set_mode("regression")</code>
        </sec>
        <sec id="iv.-workflows">
          <title>IV. Workflows</title>
          <code language="r script"># CO2 Workflows
wf_lm_CO2 &lt;- workflow() |&gt;
  add_model(lm_model) |&gt;
  add_recipe(CO2_rec)

wf_rf_CO2 &lt;- workflow() |&gt;
  add_model(rf_model) |&gt;
  add_recipe(CO2_rec)

wf_xg_CO2 &lt;- workflow() |&gt;
  add_model(xg_model) |&gt;
  add_recipe(CO2_rec)

# Temperature Workflows
wf_lm_Temp &lt;- workflow() |&gt;
  add_model(lm_model) |&gt;
  add_recipe(Temp_rec)

wf_rf_Temp &lt;- workflow() |&gt;
  add_model(rf_model) |&gt;
  add_recipe(Temp_rec)

wf_xg_Temp &lt;- workflow() |&gt;
  add_model(xg_model) |&gt;
  add_recipe(Temp_rec)</code>
        </sec>
        <sec id="v.a-co2---fitting-models">
          <title>V.a CO2 - Fitting Models</title>
          <code language="r script"># Linear - CO2
res_lm_CO2 &lt;- fit_resamples(
  wf_lm_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# Random Forest - CO2
res_rf_CO2 &lt;- fit_resamples(
  wf_rf_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# XG Boosted Tree - CO2
res_xg_CO2 &lt;- fit_resamples(
  wf_xg_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)</code>
        </sec>
        <sec id="v.b-temperature---fitting-models">
          <title>V.b Temperature - Fitting Models</title>
          <code language="r script"># Linear - Temperature 
res_lm_Temp &lt;- fit_resamples(
  wf_lm_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# Random Forest - Temperature
res_rf_Temp &lt;- fit_resamples(
  wf_rf_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# XG Boosted Tree - Temperature
res_xg_Temp &lt;- fit_resamples(
  wf_xg_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)</code>
        </sec>
        <sec id="vi.-metrics-and-comparison">
          <title>VI. Metrics and Comparison</title>
          <code language="r script">all_results &lt;- bind_rows(
  collect_metrics(res_lm_CO2) |&gt; mutate(Model = "LM - CO2"),
  collect_metrics(res_rf_CO2) |&gt; mutate(Model = "RF - CO2"),
  collect_metrics(res_xg_CO2) |&gt; mutate(Model = "XG - CO2"),
  collect_metrics(res_lm_Temp) |&gt; mutate(Model = "LM - Temp"),
  collect_metrics(res_rf_Temp) |&gt; mutate(Model = "RF - Temp"),
  collect_metrics(res_xg_Temp) |&gt; mutate(Model = "XG - Temp")
)

all_results |&gt;
  filter(.metric == "rsq") |&gt;
  ggplot(aes(x = reorder(Model, mean), y = mean, fill = Model)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "RSQ Comparison Across Models",
    x = "Model",
    y = "RSQ"
  ) +
  coord_flip() +
  theme_minimal()</code>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-12-1.png"/>
        </sec>
      </sec>
      <sec id="part-5.-full-analysis---spring-arrival-and-fall-departure-random-forest-predictions">
        <title>Part 5. Full Analysis - Spring Arrival and Fall Departure
    Random Forest Predictions</title>
        <sec id="i.-fit-to-full-model-spring-and-fall-co2-and-temperature">
          <title>I. Fit to Full Model (Spring and Fall | CO2 and
      Temperature)</title>
          <code language="r script"># Temperature Models
rf_temp_spring_fit &lt;- fit(wf_rf_Temp, data = Spring_Arrival)

rf_temp_fall_fit &lt;- fit(wf_rf_Temp, data = Fall_Departure)

# CO2 Models
rf_CO2_spring_fit &lt;- fit(wf_rf_CO2, data = Spring_Arrival)

rf_CO2_fall_fit &lt;- fit(wf_rf_CO2, data = Fall_Departure)</code>
        </sec>
        <sec id="ii.-predictions-for-models">
          <title>II. Predictions for Models</title>
          <code language="r script"># Temperature Models
temp_spring_preds &lt;- predict(rf_temp_spring_fit, Spring_Arrival) |&gt;
  bind_cols(Spring_Arrival)

temp_fall_preds &lt;- predict(rf_temp_fall_fit, Fall_Departure) |&gt;
  bind_cols(Fall_Departure)

# CO2 Models
CO2_spring_preds &lt;- predict(rf_CO2_spring_fit, Spring_Arrival) |&gt;
  bind_cols(Spring_Arrival)

CO2_fall_preds &lt;- predict(rf_CO2_fall_fit, Fall_Departure) |&gt;
  bind_cols(Fall_Departure)</code>
        </sec>
        <sec id="iii.-plotting-temperature-prediction-models">
          <title>III. Plotting Temperature Prediction Models</title>
          <code language="r script">library(patchwork) 

# Spring Arrival
p1 &lt;- ggplot(temp_spring_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "#A2CD5A") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Spring Arrival - Temperature Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")

# Fall Departure
p2 &lt;- ggplot(temp_fall_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "darkorange2") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Fall Departure - Temperature\nPredictor: Predicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")


p1 + p2</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-15-1.png"/>
        </sec>
        <sec id="iv.-plotting-co2-prediction-models">
          <title>IV. Plotting CO2 Prediction Models</title>
          <code language="r script"># Spring Arrival
p3 &lt;- ggplot(CO2_spring_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "pink1") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Spring Arrival - CO2 Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")

# Fall Departure
p4 &lt;- ggplot(CO2_fall_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "sienna2") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Fall Departure - CO2 Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")


p3 + p4</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-16-1.png"/>
        </sec>
      </sec>
      <sec id="part-6.-results-discussion">
        <title>
          <bold>Part 6. Results Discussion</bold>
        </title>
        <p>To assess the relationship between climate variables and Wood
    Thrush migration phenology, we implemented and evaluated six machine
    learning models: linear regression, random forest, and XGBoost—each
    applied separately to CO₂ and temperature predictor datasets.
    Performance was measured using 5-fold cross-validation due to the
    size of the datasets and runtime constraints. With this we had 4
    total final datasets, separated by Spring/Fall and
    Temperature/CO₂.</p>
        <p>The <bold>random forest model with temperature</bold> as the
    predictor emerged as the strongest model across both spring arrival
    and fall departure dates, showing the <bold>lowest RMSE</bold> and
    <bold>highest R² values</bold>, indicating superior predictive
    performance and robustness.</p>
        <sec id="i.-spring-arrival-predictions">
          <title>
            <bold>I. Spring Arrival Predictions</bold>
          </title>
          <sec id="temperature-models---1">
            <title>Temperature Models -</title>
            <p>The Temperature Spring model’s predictions showed a
        <bold>tight clustering along the 1:1 line</bold>, especially
        near the top-right of the plot. This indicates that as
        temperatures have risen, <bold>Wood Thrushes are arriving later
        than expected</bold>. This mismatch in timing may suggest a lag
        in response to changing environmental cues or a disruption in
        optimal conditions for early arrival.</p>
            <p>The higher accuracy in spring predictions may be because
        spring arrival is tightly regulated by temperature-dependent
        cues (such as snow melt, insect emergence, or vegetation
        growth), making it more sensitive to annual temperature
        changes.</p>
          </sec>
          <sec id="coU2082-models--">
            <title>CO₂ Models -</title>
            <p>CO₂’s Spring model had similar results, with a clustering of
        points in the top right hand corner and fairly close to the
        actual dates. This is sensible with how CO₂ comes as a direct
        impact onto temperature and can provide data that states that as
        they move in similar directions, they both have impacts on
        migration periods and dates.</p>
            <p>The accuracy is reliable, however, when compared to the
        temperature model, they have differences in how many points are
        along this line or close to. In conclusion for spring arrival,
        CO₂ and temperature have a higher reliability to help predict
        dates with temperature being more accurate.</p>
          </sec>
        </sec>
        <sec id="ii.-fall-departure-predictions">
          <title>
            <bold>II. Fall Departure Predictions</bold>
          </title>
          <sec id="temperature-models---2">
            <title>Temperature Models -</title>
            <p>Fall departure predictions demonstrated more <bold>scatter
        and variability</bold> compared to spring arrival. While the
        random forest model still performed best, the weaker R² values
        suggest that <bold>fall migration timing is less directly tied
        to temperature or CO₂ alone</bold>. The wider spread of points
        around the 1:1 line, particularly in the lower-left region,
        implies that <bold>birds are departing earlier than
        expected</bold> in many cases.</p>
            <p>This might indicate that other variables—such as food
        availability, photoperiod (day length), or precipitation
        patterns—play a larger role in influencing fall departure
        behavior.</p>
          </sec>
          <sec id="coU2082-models---1">
            <title>CO₂ Models -</title>
            <p>While temperature-based models consistently outperformed
        CO₂-based models, the <bold>patterns in both sets of predictions
        were similar</bold>, suggesting that CO₂ indirectly influences
        migration phenology through its effect on global
        temperatures.</p>
            <p>Visualizations comparing CO₂ and temperature models showed
        nearly <bold>parallel trends</bold>, with later spring arrivals
        and earlier fall departures becoming more common over
        time—consistent with broader ecological impacts of climate
        change.</p>
          </sec>
        </sec>
        <sec id="iii.-overall-analysis-conclusion">
          <title>III. Overall Analysis Conclusion</title>
          <p>From our multiple model simulations, we concluded that
      temperature has the bigger impact directly on migration dates.
      While CO₂ did have similar results to temperature, it had much
      more variability and less accuracy. This may be because of CO₂
      potentially being an indirect impact on migration patterns, but
      can help to predict these dates when added to temperature
      models.</p>
          <p><bold>Future studies</bold> could include more sophisticated
      models on computers that can run more in-depth and larger
      datasets. Along with more skill knowledge of RStudio and how to
      better create models that both predict and demonstrate correlation
      between predictor and response variables.</p>
          <p><bold>Some limitations</bold> that we encountered throughout
      this project was mostly through data analysis and cleaning. Our
      climate data was particular to how it was supposed to be cleaned
      and took many hours of excel refining to be usable in RStudio.
      Another major roadblock that we encountered and was a large
      portion of our challenges was the rendering of our files to be
      able to display them as a website through Github pages. With
      multiple meetings dedicated to resolving this issue, we still
      faced many errors with long rendering periods, models taking hours
      to process, and seemingly endless errors. However, we preserved
      through it all to create a simple yet replicable method to help
      understand the correlation between temperature, CO₂, and migration
      dates.</p>
          <p><bold>The significance of this study</bold> relates back to our
      original problem that inspired our target. Avian species are one
      of the longest standing species groups, dating back to before
      records existed. With their adaptable and resilient nature, they
      are ideal for studies regarding changes to key factors that can
      drastically harm their populations. Our goal with this study was
      to begin a coding process that can be replicated and used across
      multiple species of different conservation statuses. While this
      report may need more refining and different methods to achieve a
      successful and accurate depiction of the impact on these
      variables, it begins the discussion of how humans are not the only
      species to be impacted by CO₂ emissions and temperature
      variance.</p>
          <p><bold>Our take away</bold> from this is that even as junior
      data analysts, we can create studies that can be built upon and
      developed to create solutions or incentives for policy management
      of wildlife and emissions. We hoped to contribute to the wider
      ecological research surrounding conservation of native and
      important species.</p>
        </sec>
        <sec id="iv.-visual-summary">
          <title>
            <bold>IV. Visual Summary</bold>
          </title>
          <p>We generated the following visualizations to illustrate key
      trends:</p>
          <list list-type="bullet">
            <list-item>
              <p><bold>Figure 1</bold>: Spring Arrival vs. Annual
          Temperature</p>
            </list-item>
          </list>
          <code language="r script">print(p1)</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-17-1.png"/>
          <list list-type="bullet">
            <list-item>
              <p><bold>Figure 2</bold>: Fall Departure vs. Annual
          Temperature</p>
            </list-item>
          </list>
          <code language="r script">print(p2)</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-18-1.png"/>
          <list list-type="bullet">
            <list-item>
              <p><bold>Figure 3</bold>: Spring Arrival vs. Annual CO₂</p>
            </list-item>
          </list>
          <code language="r script">print(p3)</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-19-1.png"/>
          <list list-type="bullet">
            <list-item>
              <p><bold>Figure 4</bold>: Fall Departure vs. Annual CO₂</p>
            </list-item>
          </list>
          <code language="r script">print(p4)</code>
          <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
          <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-20-1.png"/>
          <p>Each figure includes:</p>
          <list list-type="bullet">
            <list-item>
              <p>A 1:1 reference line for perfect prediction</p>
            </list-item>
            <list-item>
              <p>Color scaling by year or observation density (if used)</p>
            </list-item>
            <list-item>
              <p>Interpretation notes on clustering trends</p>
            </list-item>
          </list>
          <p>These visualizations confirm that the <bold>relationship
      between climate variables and migration phenology is
      strong</bold>, particularly for temperature and spring migration
      events.</p>
        </sec>
      </sec>
    </sec>
  </body>
  <back>
    <ref-list>
      <title/>
      <ref id="ref-noaa2024climate">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <string-name>NOAA National Centers for Environmental Information</string-name>
          </person-group>
          <article-title>Monthly global climate report for annual 2023</article-title>
          <year iso-8601-date="2024">2024</year>
          <uri>https://www.ncei.noaa.gov/access/monitoring/monthly-report/global/202313</uri>
        </element-citation>
      </ref>
      <ref id="ref-cornell2024woodthrush">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Ornithology</surname>
              <given-names>Cornell Lab of</given-names>
            </name>
          </person-group>
          <article-title>Wood thrush life history</article-title>
          <year iso-8601-date="2024">2024</year>
          <uri>https://www.allaboutbirds.org/guide/Wood_Thrush/lifehistory</uri>
        </element-citation>
      </ref>
      <ref id="ref-friedlingstein2023global">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Friedlingstein</surname>
              <given-names>Pierre</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>Global carbon budget 2023</article-title>
          <source>Earth System Science Data</source>
          <year iso-8601-date="2023">2023</year>
          <volume>15</volume>
          <pub-id pub-id-type="doi">10.5194/essd-15-123-2023</pub-id>
          <fpage>123</fpage>
          <lpage>145</lpage>
        </element-citation>
      </ref>
      <ref id="ref-neelang2024">
        <element-citation publication-type="article-journal">
          <person-group person-group-type="author">
            <name>
              <surname>Lang</surname>
              <given-names>Weiguang</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>Phenological divergence between plants and animals under climate change</article-title>
          <source>Nature Ecology and Evolution</source>
          <year iso-8601-date="2024">2024</year>
          <volume>9</volume>
          <pub-id pub-id-type="doi">https://doi.org/10.1038/s41559-024-02597-0</pub-id>
          <fpage>261</fpage>
          <lpage>272</lpage>
        </element-citation>
      </ref>
    </ref-list>
  </back>
  <sub-article article-type="notebook" id="nb-3-nb-article">
    <front-stub>
      <title-group>
        <article-title>Final Project - Wood Thrush Response</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author" corresp="yes">
          <name>
            <surname>Myers</surname>
            <given-names>Leona</given-names>
          </name>
          <string-name>Leona Myers</string-name>
          <role vocab="https://credit.niso.org" vocab-term="writing – original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing</role>
          <role>Coding</role>
          <role>Refining</role>
          <xref ref-type="aff" rid="aff-1-nb-article">a</xref>
          <xref ref-type="corresp" rid="cor-1-nb-article">*</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Hall</surname>
            <given-names>Andie</given-names>
          </name>
          <string-name>Andie Hall</string-name>
          <role vocab="https://credit.niso.org" vocab-term="writing – original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing</role>
          <role>Coding</role>
          <role>Refining</role>
          <xref ref-type="aff" rid="aff-1-nb-article">a</xref>
        </contrib>
      </contrib-group>
      <aff id="aff-1-nb-article">
        <institution-wrap>
          <institution>Colorado State University</institution>
        </institution-wrap>
      </aff>
      <author-notes>
        <corresp id="cor-1-nb-article"/>
      </author-notes>
    </front-stub>
    <body>
      <sec id="climate-change-and-avian-response-assessing-the-effects-of-coU2082-and-temperature-on-wood-thrush-populations-nb-article">
        <title>Climate Change and Avian Response: Assessing the Effects of CO₂
  and Temperature on Wood Thrush Populations</title>
        <sec id="abstract---nb-article">
          <title>Abstract -</title>
          <p>As climate change continues to drive research goals, different
    areas of impact arise surrounding not only humans but environmental
    and wildlife harm. Carbon dioxide is one of the main contributors to
    climate change, directly impacting annual temperatures and
    disturbing typical weather patterns. Wildlife, specifically avian
    species, are queue dependent on temperatures for specific
    phenological stages like migration (Lang et al.
    (<xref alt="2024" rid="ref-neelang2024-nb-article" ref-type="bibr">2024</xref>)).
    In recent decades, there has been an observed decline to several
    avian populations, leading both avian and climate scientists to
    answer if climate change has disturbed the migration periods, which
    can directly impact the effectiveness of their breeding cycles. By
    analyzing annual temperatures and carbon emissions, this study aims
    to identify a correlation between changing variables and observed
    migration dates.</p>
        </sec>
        <sec id="part-1.-introduction---nb-article">
          <title>Part 1. Introduction -</title>
          <p><bold>Problem Overview</bold>: In recent decades, global climate
    change, driven by increased carbon dioxide emissions, has
    contributed to rising temperatures and disrupted ecological systems
    (NOAA National Centers for Environmental Information
    (<xref alt="2024" rid="ref-noaa2024climate-nb-article" ref-type="bibr">2024</xref>)).
    Many migratory bird species, such as the subject of this study, the
    Wood Thrush (Hylocichla mustelina), are particularly vulnerable to
    these changes due to their reliance on specific environmental cues
    for migration, breeding, and survival. The Wood Thrush is included
    on the Yellow Watch List for birds most at risk of extinction, and
    it is one of the most prominent examples of declining forest
    songbirds in North America (Ornithology
    (<xref alt="2024" rid="ref-cornell2024woodthrush-nb-article" ref-type="bibr">2024</xref>)).
    Populations have declined by 1.3% per year, resulting in a
    cumulative decline of approximately 50% between 1966 and 2019
    (Ornithology
    (<xref alt="2024" rid="ref-cornell2024woodthrush-nb-article" ref-type="bibr">2024</xref>)).
    Declines in Wood Thrush populations have been observed across North
    America, yet the extent to which atmospheric CO2 levels and
    associated temperature changes contribute to these declines remains
    unclear.</p>
          <sec id="cell-fig-wood-thrush-nb-article" specific-use="notebook-content">
            <code language="r script">knitr::include_graphics("~/Github/ESS-330-Final-Project-REDO/images/Wood_Thrush_Photo.jpg")</code>
            <fig id="fig-wood-thrush-nb-article">
              <caption>
                <p>Figure 1: Wood Thrush - Lance Leonhardt (Audubon
      Vermont)</p>
              </caption>
              <graphic mimetype="image" mime-subtype="jpeg" xlink:href="images/Wood_Thrush_Photo.jpg"/>
            </fig>
          </sec>
        </sec>
        <sec id="part-2.-materials-and-methods---nb-article">
          <title>Part 2. Materials and Methods -</title>
          <sec id="i.-research-goal-and-data-sources-nb-article">
            <title>I. Research Goal and Data Sources</title>
            <p><bold>This research will investigate the effects of atmospheric
      CO₂ concentrations and temperature changes on the population
      dynamics of the Wood Thrush (Hylocichla mustelina)</bold>, a
      migratory songbird of conservation concern. The study integrates
      climate and ecological data from multiple large-scale sources:
      temperature records from the National Weather Service, (NOAA
      National Centers for Environmental Information
      (<xref alt="2024" rid="ref-noaa2024climate-nb-article" ref-type="bibr">2024</xref>))
      bird abundance and distribution data from Cornell’s eBird Dataset
      (Ornithology
      (<xref alt="2024" rid="ref-cornell2024woodthrush-nb-article" ref-type="bibr">2024</xref>)),
      and atmospheric CO₂ data from the Global Carbon Budget
      (Friedlingstein et al.
      (<xref alt="2023" rid="ref-friedlingstein2023global-nb-article" ref-type="bibr">2023</xref>)).
      Using these data sources, we can create a model to help determine
      the effect of these variables on the arrival and departure dates
      of these species along the mid-northeastern coast of the United
      States from 1966 to 2019.</p>
          </sec>
          <sec id="ii.-methods-overview-nb-article">
            <title>II. Methods Overview</title>
            <list list-type="order">
              <list-item>
                <p>
                  <bold>Data acquisition</bold>
                </p>
                <list list-type="bullet">
                  <list-item>
                    <p>Climate Data: National Weather Service</p>
                  </list-item>
                  <list-item>
                    <p>CO₂ Data: Global Carbon Budget</p>
                  </list-item>
                  <list-item>
                    <p>Bird Observation Data: Cornell Lab’s eBird dataset</p>
                  </list-item>
                </list>
              </list-item>
              <list-item>
                <p>
                  <bold>Data Cleaning and Processing</bold>
                </p>
                <list list-type="bullet">
                  <list-item>
                    <p><bold>Climate Data -</bold> Imported 7 different
              datasets from the states above that recorded annual
              temperatures for each month between 1966 and 2019 and
              combined into one large dataset,
              “All_Weather_Data.csv”</p>
                    <list list-type="bullet">
                      <list-item>
                        <p><bold>Difficulties</bold>: The data was extremely
                  time-consuming to clean and process into a large
                  dataset due to the website’s pdf format for data
                  exports. Using Excel’s data from the file helped to
                  import the data and allowed for processing and
                  cleaning of the data before being inserted into the
                  rProject data directory.</p>
                      </list-item>
                    </list>
                  </list-item>
                  <list-item>
                    <p><bold>CO2 Data -</bold> Downloaded from the Global
              Carbon Budget and then uploaded to Rstudio. No additional
              cleaning was needed.</p>
                    <list list-type="bullet">
                      <list-item>
                        <p><bold>Difficulties</bold>: This data set only
                  includes annual emission while other data sets include
                  monthly data, but was the most accessible to our
                  report.</p>
                      </list-item>
                    </list>
                  </list-item>
                  <list-item>
                    <p><bold>Wood Thrush Data -</bold> Filtered Wood Thrush
              eBird data to between the years of 1966 and 2019, along
              with filtering the location of the bird to these specific
              states: Pennsylvania, West Virginia, Virginia, Kentucky,
              Ohio, Indiana, and Tennessee. “Wood_Thrush_Raw.csv”</p>
                    <list list-type="bullet">
                      <list-item>
                        <p><bold>Difficulties</bold>: The dataset is about
                  131.5 MB and cannot be uploaded to the git repository,
                  meaning data sharing had to be done via email rather
                  than sharing the actual repo for us to pull and
                  push. </p>
                      </list-item>
                    </list>
                  </list-item>
                </list>
              </list-item>
              <list-item>
                <p>
                  <bold>Statistical Analysis</bold>
                </p>
                <p>
                  <bold>Preliminary Analysis - Linear Regression
          Model</bold>
                </p>
                <list list-type="bullet">
                  <list-item>
                    <p>To get a basic understand of the correlation
              relationship between temperature, CO2, and dates of
              observation, we created a linear model to visualize and
              create statistical information.</p>
                  </list-item>
                </list>
                <p>
                  <bold>Main Analysis - Machine Learning Prediction
          Models</bold>
                </p>
                <list list-type="bullet">
                  <list-item>
                    <p>Using the multiple datasets to account for temperature,
              CO2, and observations, we created multiple machine
              learning models: Linear Regression, Random Forest, and
              XGBoost. To identify the model of best fit, we created a
              workflow that would allow us to collect the metrics and
              determine the model we should choose based on the
              R-squared and RMSE values.</p>
                  </list-item>
                  <list-item>
                    <p>Using two separate recipes to account for both the
              integration of temperature on observation dates, along
              with CO2 emissions, to ensure that they would not
              interfere with each other, and give us much more data to
              analyze. After prepping and baking the data, we created
              workflows to run the models. In total, we tested about 6
              models, three for each recipe, and deciphered that Random
              Forest gives us the best predictions for both predictor
              variables.</p>
                  </list-item>
                  <list-item>
                    <p>Once models were defined with both models and fitted to
              the resamples of the CV fold, we ran the models to
              determine their statistical significance and to see if the
              outcome of the model would give us data that would either
              prove or disprove our hypothesis. We then, with these
              models we create visualizations to represent and
              understand the data much better.</p>
                  </list-item>
                </list>
              </list-item>
              <list-item>
                <p>
                  <bold>Visualization</bold>
                </p>
                <list list-type="bullet">
                  <list-item>
                    <p>Creating plots for the relationship between observation
              date and CO2, along with a separate relationship between
              observation date and temperature. In total, there will be
              four main graphs to understand their impact on both Spring
              Arrival dates and Fall Departure dates.</p>
                  </list-item>
                </list>
              </list-item>
            </list>
          </sec>
        </sec>
        <sec id="part-3.-preliminary-analysis---exploring-the-data-nb-article">
          <title>Part 3. Preliminary Analysis - Exploring the Data</title>
          <sec specific-use="notebook-content">
            <code language="r script"># Library Codes used
library(tidyverse)</code>
            <boxed-text>
              <preformat>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.2     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</preformat>
            </boxed-text>
            <code language="r script">library(tidymodels)</code>
            <boxed-text>
              <preformat>── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──
✔ broom        1.0.8     ✔ rsample      1.3.0
✔ dials        1.4.0     ✔ tune         1.3.0
✔ infer        1.0.8     ✔ workflows    1.2.0
✔ modeldata    1.4.0     ✔ workflowsets 1.1.0
✔ parsnip      1.3.1     ✔ yardstick    1.3.2
✔ recipes      1.3.0     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()</preformat>
            </boxed-text>
            <code language="r script">library(here)</code>
            <boxed-text>
              <preformat>here() starts at /Users/andiehall/Github/ESS-330-Final-Project-REDO</preformat>
            </boxed-text>
            <code language="r script">library(readr)
library(lubridate)
library(zoo)</code>
            <boxed-text>
              <preformat>
Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric</preformat>
            </boxed-text>
          </sec>
          <sec id="i.-reading-in-data-bases-nb-article">
            <title>I. Reading in Data Bases</title>
            <sec specific-use="notebook-content">
              <code language="r script"># CO2 Emissions
Annua_CO2_Emissions &lt;- read_csv("data/annual-co2-emissions-per-country.csv")</code>
              <boxed-text>
                <preformat>Rows: 54 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Entity
dbl (2): Year, Annual CO₂ emissions
lgl (1): Code

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
              </boxed-text>
              <code language="r script"># Temperature Data
AllWeatherData &lt;- read_csv("data/AllWeatherData.csv")</code>
              <boxed-text>
                <preformat>Rows: 378 Columns: 15
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): STATE
dbl (14): Year, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec, ...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
              </boxed-text>
              <code language="r script"># Wood Thrush Data
Wood_Thrush &lt;- read_csv("data/Wood_Thrush.csv")</code>
              <boxed-text>
                <preformat>New names:
Rows: 301512 Columns: 27
── Column specification
──────────────────────────────────────────────────────── Delimiter: "," chr
(6): COUNTRY, COUNTRY CODE, STATE, COUNTY, OBSERVATION COUNT, OBSERVATI... dbl
(2): LATITUDE, LONGITUDE lgl (19): ...6, ...10, ...11, ...12, ...13, ...14,
...15, ...16, ...17, ...1...
ℹ Use `spec()` to retrieve the full column specification for this data. ℹ
Specify the column types or set `show_col_types = FALSE` to quiet this message.
• `` -&gt; `...6`
• `` -&gt; `...10`
• `` -&gt; `...11`
• `` -&gt; `...12`
• `` -&gt; `...13`
• `` -&gt; `...14`
• `` -&gt; `...15`
• `` -&gt; `...16`
• `` -&gt; `...17`
• `` -&gt; `...18`
• `` -&gt; `...19`
• `` -&gt; `...20`
• `` -&gt; `...21`
• `` -&gt; `...22`
• `` -&gt; `...23`
• `` -&gt; `...24`
• `` -&gt; `...25`
• `` -&gt; `...26`
• `` -&gt; `...27`</preformat>
              </boxed-text>
            </sec>
          </sec>
          <sec id="ii.-preppingcleaning-data-sets-nb-article">
            <title>II. Prepping/Cleaning Data Sets</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Formatting Wood Thrush
Wood_Thrush &lt;- Wood_Thrush |&gt;
  select(COUNTRY, `COUNTRY CODE`, STATE, `OBSERVATION COUNT`, `OBSERVATION DATE`, LATITUDE, LONGITUDE) |&gt;
  mutate(`OBSERVATION DATE` = as.Date(`OBSERVATION DATE`, format = "%m/%d/%Y"),
         Year = year(`OBSERVATION DATE`))

# Formatting Weather
Annual_Weather &lt;- AllWeatherData |&gt;
  select(Year, Annual, STATE)

# Formatting CO2
Annua_CO2_Emissions &lt;- Annua_CO2_Emissions |&gt;
  select(Year, `Annual CO₂ emissions`)

# Joined Data
Main_Data &lt;- Wood_Thrush |&gt;
  inner_join(Annual_Weather, by = c("Year", "STATE")) |&gt;
  inner_join(Annua_CO2_Emissions, by = "Year") |&gt;
  mutate(DayOfYear = yday(`OBSERVATION DATE`)) |&gt;
  drop_na(Annual, `Annual CO₂ emissions`, DayOfYear)

# Creating Springtime Dataset
Spring_Arrival &lt;- Main_Data |&gt;
  group_by(year(`OBSERVATION DATE`)) |&gt;
  slice_min(`OBSERVATION DATE`, with_ties = FALSE)

# Creating Falltime Dataset
Fall_Departure &lt;- Main_Data |&gt;
  group_by(year(`OBSERVATION DATE`)) |&gt;
  slice_max(`OBSERVATION DATE`, with_ties = FALSE)</code>
            </sec>
          </sec>
          <sec id="iii.-creating-linear-model-for-observation-dates-nb-article">
            <title>III. Creating Linear Model for Observation Dates</title>
            <sec id="temperature-models---nb-article">
              <title>Temperature Models -</title>
              <sec specific-use="notebook-content">
                <code language="r script"># Temperature Model - Spring
Temp_S_Main_Model &lt;- lm(formula = DayOfYear ~ Annual, data = Spring_Arrival)

summary(Temp_S_Main_Model)</code>
                <boxed-text>
                  <preformat>
Call:
lm(formula = DayOfYear ~ Annual, data = Spring_Arrival)

Residuals:
    Min      1Q  Median      3Q     Max 
-86.777  -1.755   5.228   9.191  21.902 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)  35.7705    36.6956   0.975    0.334
Annual        0.9964     0.6456   1.543    0.129

Residual standard error: 20.59 on 52 degrees of freedom
Multiple R-squared:  0.0438,    Adjusted R-squared:  0.02541 
F-statistic: 2.382 on 1 and 52 DF,  p-value: 0.1288</preformat>
                </boxed-text>
                <code language="r script">springp1 &lt;- ggplot(Spring_Arrival, aes(x = Annual, y = DayOfYear)) +
  geom_point(color = "#87CEFA", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "#9BCD9B", se = TRUE) +  
  labs(
    title = "Effect of Annual Temperature on\nSpring Arrival Date",
    x = "Annual Average Temperature (°C)",  
    y = "Day of Year of Spring Arrival"
  ) +
  theme_minimal()

# Temperature Model - Spring
Temp_F_Main_Model &lt;- lm(formula = DayOfYear ~ Annual, data = Fall_Departure)

summary(Temp_F_Main_Model)</code>
                <boxed-text>
                  <preformat>
Call:
lm(formula = DayOfYear ~ Annual, data = Fall_Departure)

Residuals:
    Min      1Q  Median      3Q     Max 
-34.127 -18.496  -7.249   9.039  57.588 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 392.1490    47.0361   8.337 3.75e-11 ***
Annual       -1.5966     0.8621  -1.852   0.0697 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 24.59 on 52 degrees of freedom
Multiple R-squared:  0.06188,   Adjusted R-squared:  0.04384 
F-statistic:  3.43 on 1 and 52 DF,  p-value: 0.06971</preformat>
                </boxed-text>
                <code language="r script">fallp1 &lt;- ggplot(Fall_Departure, aes(x = Annual, y = DayOfYear)) +
  geom_point(color = "palevioletred1", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "#FF7256", se = TRUE) +  
  labs(
    title = "Effect of Annual Temperature on\nFall Departure Date",
    x = "Annual Average Temperature (°C)",  
    y = "Day of Year of Fall Depature (Last Observation)"
  ) +
  theme_minimal()

# Combine plots side by side

library(patchwork)

combined_plot &lt;- springp1 + fallp1

print(combined_plot)</code>
                <boxed-text>
                  <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
                </boxed-text>
                <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-4-1.png"/>
              </sec>
            </sec>
            <sec id="co2-models---nb-article">
              <title>CO2 Models -</title>
              <sec specific-use="notebook-content">
                <code language="r script">library(patchwork)
# CO2 Model - Spring
CO2_S_Main_Model &lt;- lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Spring_Arrival)

summary(CO2_S_Main_Model)</code>
                <boxed-text>
                  <preformat>
Call:
lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Spring_Arrival)

Residuals:
    Min      1Q  Median      3Q     Max 
-90.777   1.588   4.938   9.630  13.831 

Coefficients:
                         Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)             1.023e+02  2.019e+01   5.066 5.46e-06 ***
`Annual CO₂ emissions` -1.660e-09  3.302e-09  -0.503    0.617    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 21.01 on 52 degrees of freedom
Multiple R-squared:  0.004839,  Adjusted R-squared:  -0.0143 
F-statistic: 0.2529 on 1 and 52 DF,  p-value: 0.6172</preformat>
                </boxed-text>
                <code language="r script">springp2 &lt;- ggplot(Spring_Arrival, aes(x = `Annual CO₂ emissions`, y = DayOfYear)) +
  geom_point(color = "#FFBBFF", alpha = 0.6) +  
  geom_smooth(method = "lm", color = "palevioletred2", se = TRUE) +  
  labs(
    title = "Effect of Annual CO2 Emissions on\npring Arrival Date",
    x = "Annual CO2 Emissions (ppm)", 
    y = "Day of Year of Spring Arrival"
  ) +
  theme_minimal()

# CO2 Model - Fall
CO2_F_Main_Model &lt;- lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Fall_Departure)

summary(CO2_F_Main_Model)</code>
                <boxed-text>
                  <preformat>
Call:
lm(formula = DayOfYear ~ `Annual CO₂ emissions`, data = Fall_Departure)

Residuals:
   Min     1Q Median     3Q    Max 
-27.19 -17.02 -12.16  10.40  63.22 

Coefficients:
                        Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)            2.912e+02  2.432e+01  11.974   &lt;2e-16 ***
`Annual CO₂ emissions` 2.323e-09  3.977e-09   0.584    0.562    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 25.3 on 52 degrees of freedom
Multiple R-squared:  0.006521,  Adjusted R-squared:  -0.01258 
F-statistic: 0.3413 on 1 and 52 DF,  p-value: 0.5616</preformat>
                </boxed-text>
                <code language="r script">fallp2 &lt;- ggplot(Fall_Departure, aes(x = `Annual CO₂ emissions`, y = DayOfYear)) +
  geom_point(color = "tomato2", alpha = 0.6) +  # Scatter points
  geom_smooth(method = "lm", color = "#EE7942", se = TRUE) +  # Regression line with confidence interval
  labs(
    title = "Effect of Annual CO2 Emissions on\nFall Departure Date",
    x = "Annual CO2 Emissions (ppm)",  # Adjust units if needed
    y = "Day of Year of Fall Departure"
  ) +
  theme_minimal()

combined_plot2 &lt;- springp2 + fallp2

print(combined_plot2)</code>
                <boxed-text>
                  <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
                </boxed-text>
                <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-5-1.png"/>
              </sec>
            </sec>
          </sec>
        </sec>
        <sec id="part-4.-main-analysis---machine-learning-model-nb-article">
          <title>Part 4. Main Analysis - Machine Learning Model</title>
          <sec id="i.-splitting-and-cv-folds-nb-article">
            <title>I. Splitting and CV folds</title>
            <sec specific-use="notebook-content">
              <code language="r script">set.seed(123)
WT_split &lt;- initial_split(Main_Data, prop = 0.8)
WT_train &lt;- training(WT_split)
WT_test  &lt;- testing(WT_split)
WT_cv &lt;- vfold_cv(WT_train, v = 5)</code>
            </sec>
          </sec>
          <sec id="ii.-recipes-nb-article">
            <title>II. Recipes</title>
            <sec specific-use="notebook-content">
              <code language="r script"># CO2 Recipe 
CO2_rec &lt;- recipe(formula = DayOfYear ~ `Annual CO₂ emissions`, data = WT_train) |&gt;
  step_log(all_predictors()) |&gt;
  step_naomit(all_predictors(), all_outcomes())

# Temperature Recipe
Temp_rec &lt;- recipe(formula = DayOfYear ~ Annual, data = WT_train) |&gt;
  step_log(all_predictors(), offset = 1) |&gt;
  step_naomit(all_predictors(), all_outcomes())</code>
            </sec>
          </sec>
          <sec id="iii.-define-models-nb-article">
            <title>III. Define Models</title>
            <sec specific-use="notebook-content">
              <code language="r script">lm_model &lt;- linear_reg() |&gt; set_engine("lm") |&gt; set_mode("regression")
rf_model &lt;- rand_forest(trees = 100) |&gt; set_engine("ranger") |&gt; set_mode("regression")
xg_model &lt;- boost_tree() |&gt; set_engine("xgboost") |&gt; set_mode("regression")</code>
            </sec>
          </sec>
          <sec id="iv.-workflows-nb-article">
            <title>IV. Workflows</title>
            <sec specific-use="notebook-content">
              <code language="r script"># CO2 Workflows
wf_lm_CO2 &lt;- workflow() |&gt;
  add_model(lm_model) |&gt;
  add_recipe(CO2_rec)

wf_rf_CO2 &lt;- workflow() |&gt;
  add_model(rf_model) |&gt;
  add_recipe(CO2_rec)

wf_xg_CO2 &lt;- workflow() |&gt;
  add_model(xg_model) |&gt;
  add_recipe(CO2_rec)

# Temperature Workflows
wf_lm_Temp &lt;- workflow() |&gt;
  add_model(lm_model) |&gt;
  add_recipe(Temp_rec)

wf_rf_Temp &lt;- workflow() |&gt;
  add_model(rf_model) |&gt;
  add_recipe(Temp_rec)

wf_xg_Temp &lt;- workflow() |&gt;
  add_model(xg_model) |&gt;
  add_recipe(Temp_rec)</code>
            </sec>
          </sec>
          <sec id="v.a-co2---fitting-models-nb-article">
            <title>V.a CO2 - Fitting Models</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Linear - CO2
res_lm_CO2 &lt;- fit_resamples(
  wf_lm_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# Random Forest - CO2
res_rf_CO2 &lt;- fit_resamples(
  wf_rf_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# XG Boosted Tree - CO2
res_xg_CO2 &lt;- fit_resamples(
  wf_xg_CO2,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)</code>
            </sec>
          </sec>
          <sec id="v.b-temperature---fitting-models-nb-article">
            <title>V.b Temperature - Fitting Models</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Linear - Temperature 
res_lm_Temp &lt;- fit_resamples(
  wf_lm_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# Random Forest - Temperature
res_rf_Temp &lt;- fit_resamples(
  wf_rf_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)

# XG Boosted Tree - Temperature
res_xg_Temp &lt;- fit_resamples(
  wf_xg_Temp,
  resamples = WT_cv,
  metrics = metric_set(rmse, rsq),
  control = control_resamples(save_pred = TRUE)
)</code>
            </sec>
          </sec>
          <sec id="vi.-metrics-and-comparison-nb-article">
            <title>VI. Metrics and Comparison</title>
            <sec specific-use="notebook-content">
              <code language="r script">all_results &lt;- bind_rows(
  collect_metrics(res_lm_CO2) |&gt; mutate(Model = "LM - CO2"),
  collect_metrics(res_rf_CO2) |&gt; mutate(Model = "RF - CO2"),
  collect_metrics(res_xg_CO2) |&gt; mutate(Model = "XG - CO2"),
  collect_metrics(res_lm_Temp) |&gt; mutate(Model = "LM - Temp"),
  collect_metrics(res_rf_Temp) |&gt; mutate(Model = "RF - Temp"),
  collect_metrics(res_xg_Temp) |&gt; mutate(Model = "XG - Temp")
)

all_results |&gt;
  filter(.metric == "rsq") |&gt;
  ggplot(aes(x = reorder(Model, mean), y = mean, fill = Model)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "RSQ Comparison Across Models",
    x = "Model",
    y = "RSQ"
  ) +
  coord_flip() +
  theme_minimal()</code>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-12-1.png"/>
            </sec>
          </sec>
        </sec>
        <sec id="part-5.-full-analysis---spring-arrival-and-fall-departure-random-forest-predictions-nb-article">
          <title>Part 5. Full Analysis - Spring Arrival and Fall Departure
    Random Forest Predictions</title>
          <sec id="i.-fit-to-full-model-spring-and-fall-co2-and-temperature-nb-article">
            <title>I. Fit to Full Model (Spring and Fall | CO2 and
      Temperature)</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Temperature Models
rf_temp_spring_fit &lt;- fit(wf_rf_Temp, data = Spring_Arrival)

rf_temp_fall_fit &lt;- fit(wf_rf_Temp, data = Fall_Departure)

# CO2 Models
rf_CO2_spring_fit &lt;- fit(wf_rf_CO2, data = Spring_Arrival)

rf_CO2_fall_fit &lt;- fit(wf_rf_CO2, data = Fall_Departure)</code>
            </sec>
          </sec>
          <sec id="ii.-predictions-for-models-nb-article">
            <title>II. Predictions for Models</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Temperature Models
temp_spring_preds &lt;- predict(rf_temp_spring_fit, Spring_Arrival) |&gt;
  bind_cols(Spring_Arrival)

temp_fall_preds &lt;- predict(rf_temp_fall_fit, Fall_Departure) |&gt;
  bind_cols(Fall_Departure)

# CO2 Models
CO2_spring_preds &lt;- predict(rf_CO2_spring_fit, Spring_Arrival) |&gt;
  bind_cols(Spring_Arrival)

CO2_fall_preds &lt;- predict(rf_CO2_fall_fit, Fall_Departure) |&gt;
  bind_cols(Fall_Departure)</code>
            </sec>
          </sec>
          <sec id="iii.-plotting-temperature-prediction-models-nb-article">
            <title>III. Plotting Temperature Prediction Models</title>
            <sec specific-use="notebook-content">
              <code language="r script">library(patchwork) 

# Spring Arrival
p1 &lt;- ggplot(temp_spring_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "#A2CD5A") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Spring Arrival - Temperature Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")

# Fall Departure
p2 &lt;- ggplot(temp_fall_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "darkorange2") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Fall Departure - Temperature\nPredictor: Predicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")


p1 + p2</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-15-1.png"/>
            </sec>
          </sec>
          <sec id="iv.-plotting-co2-prediction-models-nb-article">
            <title>IV. Plotting CO2 Prediction Models</title>
            <sec specific-use="notebook-content">
              <code language="r script"># Spring Arrival
p3 &lt;- ggplot(CO2_spring_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "pink1") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Spring Arrival - CO2 Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")

# Fall Departure
p4 &lt;- ggplot(CO2_fall_preds, aes(x = .pred, y = DayOfYear)) +
  geom_point(alpha = 0.9, color = "sienna2") +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
  theme_minimal() +
  labs(title = "Fall Departure - CO2 Predictor:\nPredicted vs Actual Day\nof Year Observation",
       x = "Predicted DOY", y = "Actual DOY")


p3 + p4</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'
`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-16-1.png"/>
            </sec>
          </sec>
        </sec>
        <sec id="part-6.-results-discussion-nb-article">
          <title>
            <bold>Part 6. Results Discussion</bold>
          </title>
          <p>To assess the relationship between climate variables and Wood
    Thrush migration phenology, we implemented and evaluated six machine
    learning models: linear regression, random forest, and XGBoost—each
    applied separately to CO₂ and temperature predictor datasets.
    Performance was measured using 5-fold cross-validation due to the
    size of the datasets and runtime constraints. With this we had 4
    total final datasets, separated by Spring/Fall and
    Temperature/CO₂.</p>
          <p>The <bold>random forest model with temperature</bold> as the
    predictor emerged as the strongest model across both spring arrival
    and fall departure dates, showing the <bold>lowest RMSE</bold> and
    <bold>highest R² values</bold>, indicating superior predictive
    performance and robustness.</p>
          <sec id="i.-spring-arrival-predictions-nb-article">
            <title>
              <bold>I. Spring Arrival Predictions</bold>
            </title>
            <sec id="temperature-models---1-nb-article">
              <title>Temperature Models -</title>
              <p>The Temperature Spring model’s predictions showed a
        <bold>tight clustering along the 1:1 line</bold>, especially
        near the top-right of the plot. This indicates that as
        temperatures have risen, <bold>Wood Thrushes are arriving later
        than expected</bold>. This mismatch in timing may suggest a lag
        in response to changing environmental cues or a disruption in
        optimal conditions for early arrival.</p>
              <p>The higher accuracy in spring predictions may be because
        spring arrival is tightly regulated by temperature-dependent
        cues (such as snow melt, insect emergence, or vegetation
        growth), making it more sensitive to annual temperature
        changes.</p>
            </sec>
            <sec id="coU2082-models---nb-article">
              <title>CO₂ Models -</title>
              <p>CO₂’s Spring model had similar results, with a clustering of
        points in the top right hand corner and fairly close to the
        actual dates. This is sensible with how CO₂ comes as a direct
        impact onto temperature and can provide data that states that as
        they move in similar directions, they both have impacts on
        migration periods and dates.</p>
              <p>The accuracy is reliable, however, when compared to the
        temperature model, they have differences in how many points are
        along this line or close to. In conclusion for spring arrival,
        CO₂ and temperature have a higher reliability to help predict
        dates with temperature being more accurate.</p>
            </sec>
          </sec>
          <sec id="ii.-fall-departure-predictions-nb-article">
            <title>
              <bold>II. Fall Departure Predictions</bold>
            </title>
            <sec id="temperature-models---2-nb-article">
              <title>Temperature Models -</title>
              <p>Fall departure predictions demonstrated more <bold>scatter
        and variability</bold> compared to spring arrival. While the
        random forest model still performed best, the weaker R² values
        suggest that <bold>fall migration timing is less directly tied
        to temperature or CO₂ alone</bold>. The wider spread of points
        around the 1:1 line, particularly in the lower-left region,
        implies that <bold>birds are departing earlier than
        expected</bold> in many cases.</p>
              <p>This might indicate that other variables—such as food
        availability, photoperiod (day length), or precipitation
        patterns—play a larger role in influencing fall departure
        behavior.</p>
            </sec>
            <sec id="coU2082-models---1-nb-article">
              <title>CO₂ Models -</title>
              <p>While temperature-based models consistently outperformed
        CO₂-based models, the <bold>patterns in both sets of predictions
        were similar</bold>, suggesting that CO₂ indirectly influences
        migration phenology through its effect on global
        temperatures.</p>
              <p>Visualizations comparing CO₂ and temperature models showed
        nearly <bold>parallel trends</bold>, with later spring arrivals
        and earlier fall departures becoming more common over
        time—consistent with broader ecological impacts of climate
        change.</p>
            </sec>
          </sec>
          <sec id="iii.-overall-analysis-conclusion-nb-article">
            <title>III. Overall Analysis Conclusion</title>
            <p>From our multiple model simulations, we concluded that
      temperature has the bigger impact directly on migration dates.
      While CO₂ did have similar results to temperature, it had much
      more variability and less accuracy. This may be because of CO₂
      potentially being an indirect impact on migration patterns, but
      can help to predict these dates when added to temperature
      models.</p>
            <p><bold>Future studies</bold> could include more sophisticated
      models on computers that can run more in-depth and larger
      datasets. Along with more skill knowledge of RStudio and how to
      better create models that both predict and demonstrate correlation
      between predictor and response variables.</p>
            <p><bold>Some limitations</bold> that we encountered throughout
      this project was mostly through data analysis and cleaning. Our
      climate data was particular to how it was supposed to be cleaned
      and took many hours of excel refining to be usable in RStudio.
      Another major roadblock that we encountered and was a large
      portion of our challenges was the rendering of our files to be
      able to display them as a website through Github pages. With
      multiple meetings dedicated to resolving this issue, we still
      faced many errors with long rendering periods, models taking hours
      to process, and seemingly endless errors. However, we preserved
      through it all to create a simple yet replicable method to help
      understand the correlation between temperature, CO₂, and migration
      dates.</p>
            <p><bold>The significance of this study</bold> relates back to our
      original problem that inspired our target. Avian species are one
      of the longest standing species groups, dating back to before
      records existed. With their adaptable and resilient nature, they
      are ideal for studies regarding changes to key factors that can
      drastically harm their populations. Our goal with this study was
      to begin a coding process that can be replicated and used across
      multiple species of different conservation statuses. While this
      report may need more refining and different methods to achieve a
      successful and accurate depiction of the impact on these
      variables, it begins the discussion of how humans are not the only
      species to be impacted by CO₂ emissions and temperature
      variance.</p>
            <p><bold>Our take away</bold> from this is that even as junior
      data analysts, we can create studies that can be built upon and
      developed to create solutions or incentives for policy management
      of wildlife and emissions. We hoped to contribute to the wider
      ecological research surrounding conservation of native and
      important species.</p>
          </sec>
          <sec id="iv.-visual-summary-nb-article">
            <title>
              <bold>IV. Visual Summary</bold>
            </title>
            <p>We generated the following visualizations to illustrate key
      trends:</p>
            <list list-type="bullet">
              <list-item>
                <p><bold>Figure 1</bold>: Spring Arrival vs. Annual
          Temperature</p>
              </list-item>
            </list>
            <sec specific-use="notebook-content">
              <code language="r script">print(p1)</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-17-1.png"/>
            </sec>
            <list list-type="bullet">
              <list-item>
                <p><bold>Figure 2</bold>: Fall Departure vs. Annual
          Temperature</p>
              </list-item>
            </list>
            <sec specific-use="notebook-content">
              <code language="r script">print(p2)</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-18-1.png"/>
            </sec>
            <list list-type="bullet">
              <list-item>
                <p><bold>Figure 3</bold>: Spring Arrival vs. Annual CO₂</p>
              </list-item>
            </list>
            <sec specific-use="notebook-content">
              <code language="r script">print(p3)</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-19-1.png"/>
            </sec>
            <list list-type="bullet">
              <list-item>
                <p><bold>Figure 4</bold>: Fall Departure vs. Annual CO₂</p>
              </list-item>
            </list>
            <sec specific-use="notebook-content">
              <code language="r script">print(p4)</code>
              <boxed-text>
                <preformat>`geom_smooth()` using formula = 'y ~ x'</preformat>
              </boxed-text>
              <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/unnamed-chunk-20-1.png"/>
            </sec>
            <p>Each figure includes:</p>
            <list list-type="bullet">
              <list-item>
                <p>A 1:1 reference line for perfect prediction</p>
              </list-item>
              <list-item>
                <p>Color scaling by year or observation density (if used)</p>
              </list-item>
              <list-item>
                <p>Interpretation notes on clustering trends</p>
              </list-item>
            </list>
            <p>These visualizations confirm that the <bold>relationship
      between climate variables and migration phenology is
      strong</bold>, particularly for temperature and spring migration
      events.</p>
          </sec>
        </sec>
      </sec>
    </body>
    <back>
      <ref-list>
        <title/>
        <ref id="ref-noaa2024climate-nb-article">
          <element-citation publication-type="article-journal">
            <person-group person-group-type="author">
              <string-name>NOAA National Centers for Environmental Information</string-name>
            </person-group>
            <article-title>Monthly global climate report for annual 2023</article-title>
            <year iso-8601-date="2024">2024</year>
            <uri>https://www.ncei.noaa.gov/access/monitoring/monthly-report/global/202313</uri>
          </element-citation>
        </ref>
        <ref id="ref-cornell2024woodthrush-nb-article">
          <element-citation publication-type="article-journal">
            <person-group person-group-type="author">
              <name>
                <surname>Ornithology</surname>
                <given-names>Cornell Lab of</given-names>
              </name>
            </person-group>
            <article-title>Wood thrush life history</article-title>
            <year iso-8601-date="2024">2024</year>
            <uri>https://www.allaboutbirds.org/guide/Wood_Thrush/lifehistory</uri>
          </element-citation>
        </ref>
        <ref id="ref-friedlingstein2023global-nb-article">
          <element-citation publication-type="article-journal">
            <person-group person-group-type="author">
              <name>
                <surname>Friedlingstein</surname>
                <given-names>Pierre</given-names>
              </name>
              <etal/>
            </person-group>
            <article-title>Global carbon budget 2023</article-title>
            <source>Earth System Science Data</source>
            <year iso-8601-date="2023">2023</year>
            <volume>15</volume>
            <pub-id pub-id-type="doi">10.5194/essd-15-123-2023</pub-id>
            <fpage>123</fpage>
            <lpage>145</lpage>
          </element-citation>
        </ref>
        <ref id="ref-neelang2024-nb-article">
          <element-citation publication-type="article-journal">
            <person-group person-group-type="author">
              <name>
                <surname>Lang</surname>
                <given-names>Weiguang</given-names>
              </name>
              <etal/>
            </person-group>
            <article-title>Phenological divergence between plants and animals under climate change</article-title>
            <source>Nature Ecology and Evolution</source>
            <year iso-8601-date="2024">2024</year>
            <volume>9</volume>
            <pub-id pub-id-type="doi">https://doi.org/10.1038/s41559-024-02597-0</pub-id>
            <fpage>261</fpage>
            <lpage>272</lpage>
          </element-citation>
        </ref>
      </ref-list>
    </back>
  </sub-article>
</article>
